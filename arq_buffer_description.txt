
		// RECEPTION BUFFER AND ITS WINDOWS FOR RELAY AND DESTINATION
		//
		// 	NAME											WINDOWS											//
		//																									//
		// 	W_{rmax}:			|--------------------------------numGen---------------------------------|	//
		// 	W_r:				|------------------------------------sssssssssssssssrrrrrrrrrrrr|			//
		// 	W_t:									|-------------------------------------|					//
		// 	W_{buf}:			|--numGenBuffering--|														//
		// 	W_{rr}:																	|---numGenRetrans---|	//
		// 	W_{softAck}:									 		 |-numGenPtpAck-|						//		
		// 	W_{hardAck}:											 |~~~~~~~~~~~~~~|						//
		// 	W_{rr}:																	|----rGen---|			//
		// 	W_{softAck}:									 		 |-----sGen-----|						//		
		// 	W_{hardAck}:											 |~~~~~~~~~~~~~~|						//
		//
		// W_r is the actual reception buffer size
		// W_t is the actual transmission buffer size
		// s - subject for the soft ACK request; it becomes also a subject for the hard ACK request when certain counter expires
		// r - subject for the retransmission request
		//
		// rGen = max(0, W_r - (W_{rmax} - numGenRetrans))
		// // start of rGen:	rs = 0
		// // end of rGen:		re = rGen
		// // W_{rGen}\in[s;e)
		//
		// sGen = min(numGenPtpAck, max(0, W_r - (W_{rmax} - numGenRetrans - numGenPtpAck)))
		// // start of rGen:	rs = rGen
		// // end of rGen:		re = rGen + sGen
		// // W_{sGen}\in[s;e)
		
		// RECEPTION BUFFER AND ITS WINDOWS FOR SOURCE
		//
		// 	NAME											WINDOWS											//
		//																									//
		// 	W_{rmax}:			|--------------------------------numGen---------------------------------|	//
		// 	W_r:				|----------------------------------------------------sssssssssssssshhhhh|	//
		// 	W_t:									|-------------|											//
		// 	W_{buf}:			|--numGenBuffering--|														//
		// 											|---numGenRetrans---|~~~~~~~~~~~~~~|					//
		// 													 	   		|-numGenPtpAck-|					//		
		// 	W_{softAck}:													 	   	 |-----sGen-----|		//
		// 	W_{hardAck}:													 	   	 |~~~~~~~~~~~~~~hGen|	//	
		//		
		// s - subject for the soft ACK request; it becomes also a subject for the hard ACK request when certain counter expires
		// h - subject for the hard ACK request
		//
		// sGen = min(numGenPtpAck,max(0, numGenRetrans + numGenPtpAck - W_t))
		// // start of sGen:	s = W_r - hGen			rs = std::min(W_r, hGen)
		// // end of sGen:		e = W_r - hGen - sGen	re = std::min(W_r, hGen + sGen)
		// // W_{sGen}\in[s;e)
		//
		// hGen = max(0, numGenRetrans - W_t)
		// // start of hGen:	s = W_r					rs = 0
		// // end of hGen:		e = W_r - hGen			re = std::min(W_r, hGen)
		// // W_{hGen}\in[s;e)